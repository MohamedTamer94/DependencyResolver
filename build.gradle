plugins {
    id 'java'
}

group 'io.mohamed.resolver'
version '0.1'
description = 'A CLI to resolve and download dependencies for the given artifact'

repositories {
    mavenCentral()
    google()
    flatDir {
        dirs 'libs'
    }
}

configurations.all {
    resolutionStrategy {
        force 'androidx.work:work-runtime:2.7.0-alpha05'
    }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'commons-cli:commons-cli:1.4'
    implementation 'org.jsoup:jsoup:1.14.2'
    implementation 'org.eclipse.jgit:org.eclipse.jgit:5.12.0.202106070339-r'
    implementation 'org.slf4j:slf4j-api:2.0.0-alpha5'
    implementation 'org.slf4j:slf4j-simple:2.0.0-alpha5'
    implementation 'com.google.guava:guava:30.1.1-jre'
    implementation name: 'common-24.3.0'
    implementation name: 'sdk-common-24.3.0'
    implementation name: 'manifest-merger-25.3.0'
    implementation name: 'layoutlib-api-24.3.0'
}

test {
    useJUnitPlatform()
}

def mainClassName = "io.mohamed.cli.Main"

jar {
    manifest {
        attributes "Main-Class": "$mainClassName"
    }
}

task fatJar(type: Jar) {
    manifest.from jar.manifest
    archiveClassifier.set('all')
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    with jar
}

artifacts {
    archives fatJar
}